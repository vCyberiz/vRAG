{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SreeramYashasvi\\\\Cursor Files\\\\rag-system-basic\\\\frontend\\\\src\\\\components\\\\queryinterface.js\";\nimport React, { useState } from 'react';\nimport { TextField, Button, Paper, Typography, Box } from '@mui/material';\nimport axios from 'axios';\nimport QueryResults from './queryresults';\nfunction QueryInterface({\n  selectedDocuments\n}) {\n  const [query, setQuery] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!query.trim()) return;\n    if (selectedDocuments.length === 0) {\n      setError('Please select at least one document');\n      return;\n    }\n    setLoading(true);\n    setError('');\n\n    // Add the question to messages immediately\n    const newQuestion = {\n      type: 'question',\n      question: query\n    };\n    setMessages(prev => [...prev, newQuestion]);\n    try {\n      const response = await axios.post('http://localhost:8000/query', {\n        question: query,\n        documents: selectedDocuments\n      });\n\n      // Add the answer to messages\n      const newAnswer = {\n        type: 'answer',\n        ...response.data\n      };\n      setMessages(prev => [...prev, newAnswer]);\n      setQuery(''); // Clear input after successful query\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to get response');\n      // Remove the question if there was an error\n      setMessages(prev => prev.slice(0, -1));\n    }\n    setLoading(false);\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSubmit(e);\n    }\n  };\n  return /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(QueryResults, {\n    messages: messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    sx: {\n      p: 3,\n      mt: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Ask a Question\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    value: query,\n    onChange: e => setQuery(e.target.value),\n    onKeyPress: handleKeyPress,\n    placeholder: \"Type your question and press Enter...\",\n    multiline: true,\n    rows: 2,\n    sx: {\n      mb: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    disabled: loading || !query.trim(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, loading ? 'Thinking...' : 'Ask')), error && /*#__PURE__*/React.createElement(Typography, {\n    color: \"error\",\n    sx: {\n      mt: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, error)));\n}\nexport default QueryInterface;","map":{"version":3,"names":["React","useState","TextField","Button","Paper","Typography","Box","axios","QueryResults","QueryInterface","selectedDocuments","query","setQuery","messages","setMessages","loading","setLoading","error","setError","handleSubmit","e","preventDefault","trim","length","newQuestion","type","question","prev","response","post","documents","newAnswer","data","_error$response","_error$response$data","message","slice","handleKeyPress","key","shiftKey","createElement","sx","display","flexDirection","height","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","elevation","p","mt","variant","gutterBottom","onSubmit","fullWidth","value","onChange","target","onKeyPress","placeholder","multiline","rows","mb","disabled","color"],"sources":["C:/Users/SreeramYashasvi/Cursor Files/rag-system-basic/frontend/src/components/queryinterface.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { TextField, Button, Paper, Typography, Box } from '@mui/material';\r\nimport axios from 'axios';\r\nimport QueryResults from './queryresults';\r\n\r\nfunction QueryInterface({ selectedDocuments }) {\r\n  const [query, setQuery] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!query.trim()) return;\r\n    if (selectedDocuments.length === 0) {\r\n      setError('Please select at least one document');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    // Add the question to messages immediately\r\n    const newQuestion = { type: 'question', question: query };\r\n    setMessages(prev => [...prev, newQuestion]);\r\n    \r\n    try {\r\n      const response = await axios.post('http://localhost:8000/query', {\r\n        question: query,\r\n        documents: selectedDocuments\r\n      });\r\n      \r\n      // Add the answer to messages\r\n      const newAnswer = { type: 'answer', ...response.data };\r\n      setMessages(prev => [...prev, newAnswer]);\r\n      setQuery(''); // Clear input after successful query\r\n    } catch (error) {\r\n      setError(error.response?.data?.message || 'Failed to get response');\r\n      // Remove the question if there was an error\r\n      setMessages(prev => prev.slice(0, -1));\r\n    }\r\n    \r\n    setLoading(false);\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSubmit(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', height: '100%' }}>\r\n      <QueryResults messages={messages} />\r\n      \r\n      <Paper elevation={3} sx={{ p: 3, mt: 'auto' }}>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          Ask a Question\r\n        </Typography>\r\n        <form onSubmit={handleSubmit}>\r\n          <TextField\r\n            fullWidth\r\n            value={query}\r\n            onChange={(e) => setQuery(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n            placeholder=\"Type your question and press Enter...\"\r\n            multiline\r\n            rows={2}\r\n            sx={{ mb: 2 }}\r\n          />\r\n          <Button \r\n            variant=\"contained\" \r\n            type=\"submit\"\r\n            disabled={loading || !query.trim()}\r\n          >\r\n            {loading ? 'Thinking...' : 'Ask'}\r\n          </Button>\r\n        </form>\r\n        {error && (\r\n          <Typography color=\"error\" sx={{ mt: 2 }}>\r\n            {error}\r\n          </Typography>\r\n        )}\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default QueryInterface;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,MAAM,EAAEC,KAAK,EAAEC,UAAU,EAAEC,GAAG,QAAQ,eAAe;AACzE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,gBAAgB;AAEzC,SAASC,cAAcA,CAAC;EAAEC;AAAkB,CAAC,EAAE;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMkB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACV,KAAK,CAACW,IAAI,CAAC,CAAC,EAAE;IACnB,IAAIZ,iBAAiB,CAACa,MAAM,KAAK,CAAC,EAAE;MAClCL,QAAQ,CAAC,qCAAqC,CAAC;MAC/C;IACF;IAEAF,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,EAAE,CAAC;;IAEZ;IACA,MAAMM,WAAW,GAAG;MAAEC,IAAI,EAAE,UAAU;MAAEC,QAAQ,EAAEf;IAAM,CAAC;IACzDG,WAAW,CAACa,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEH,WAAW,CAAC,CAAC;IAE3C,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAAC,6BAA6B,EAAE;QAC/DH,QAAQ,EAAEf,KAAK;QACfmB,SAAS,EAAEpB;MACb,CAAC,CAAC;;MAEF;MACA,MAAMqB,SAAS,GAAG;QAAEN,IAAI,EAAE,QAAQ;QAAE,GAAGG,QAAQ,CAACI;MAAK,CAAC;MACtDlB,WAAW,CAACa,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEI,SAAS,CAAC,CAAC;MACzCnB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOK,KAAK,EAAE;MAAA,IAAAgB,eAAA,EAAAC,oBAAA;MACdhB,QAAQ,CAAC,EAAAe,eAAA,GAAAhB,KAAK,CAACW,QAAQ,cAAAK,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBD,IAAI,cAAAE,oBAAA,uBAApBA,oBAAA,CAAsBC,OAAO,KAAI,wBAAwB,CAAC;MACnE;MACArB,WAAW,CAACa,IAAI,IAAIA,IAAI,CAACS,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACxC;IAEApB,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,MAAMqB,cAAc,GAAIjB,CAAC,IAAK;IAC5B,IAAIA,CAAC,CAACkB,GAAG,KAAK,OAAO,IAAI,CAAClB,CAAC,CAACmB,QAAQ,EAAE;MACpCnB,CAAC,CAACC,cAAc,CAAC,CAAC;MAClBF,YAAY,CAACC,CAAC,CAAC;IACjB;EACF,CAAC;EAED,oBACEpB,KAAA,CAAAwC,aAAA,CAAClC,GAAG;IAACmC,EAAE,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,aAAa,EAAE,QAAQ;MAAEC,MAAM,EAAE;IAAO,CAAE;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpElD,KAAA,CAAAwC,aAAA,CAAChC,YAAY;IAACK,QAAQ,EAAEA,QAAS;IAAAgC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAEpClD,KAAA,CAAAwC,aAAA,CAACpC,KAAK;IAAC+C,SAAS,EAAE,CAAE;IAACV,EAAE,EAAE;MAAEW,CAAC,EAAE,CAAC;MAAEC,EAAE,EAAE;IAAO,CAAE;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5ClD,KAAA,CAAAwC,aAAA,CAACnC,UAAU;IAACiD,OAAO,EAAC,IAAI;IAACC,YAAY;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,gBAE1B,CAAC,eACblD,KAAA,CAAAwC,aAAA;IAAMgB,QAAQ,EAAErC,YAAa;IAAA0B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3BlD,KAAA,CAAAwC,aAAA,CAACtC,SAAS;IACRuD,SAAS;IACTC,KAAK,EAAE/C,KAAM;IACbgD,QAAQ,EAAGvC,CAAC,IAAKR,QAAQ,CAACQ,CAAC,CAACwC,MAAM,CAACF,KAAK,CAAE;IAC1CG,UAAU,EAAExB,cAAe;IAC3ByB,WAAW,EAAC,uCAAuC;IACnDC,SAAS;IACTC,IAAI,EAAE,CAAE;IACRvB,EAAE,EAAE;MAAEwB,EAAE,EAAE;IAAE,CAAE;IAAApB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACf,CAAC,eACFlD,KAAA,CAAAwC,aAAA,CAACrC,MAAM;IACLmD,OAAO,EAAC,WAAW;IACnB7B,IAAI,EAAC,QAAQ;IACbyC,QAAQ,EAAEnD,OAAO,IAAI,CAACJ,KAAK,CAACW,IAAI,CAAC,CAAE;IAAAuB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAElCnC,OAAO,GAAG,aAAa,GAAG,KACrB,CACJ,CAAC,EACNE,KAAK,iBACJjB,KAAA,CAAAwC,aAAA,CAACnC,UAAU;IAAC8D,KAAK,EAAC,OAAO;IAAC1B,EAAE,EAAE;MAAEY,EAAE,EAAE;IAAE,CAAE;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACrCjC,KACS,CAET,CACJ,CAAC;AAEV;AAEA,eAAeR,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}