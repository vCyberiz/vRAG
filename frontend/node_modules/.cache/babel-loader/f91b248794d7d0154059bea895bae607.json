{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SreeramYashasvi\\\\Cursor Files\\\\rag-pinecone\\\\frontend\\\\src\\\\components\\\\fileupload.js\";\nimport React, { useState } from 'react';\nimport { Button, Typography, Box, LinearProgress } from '@mui/material';\nimport axios from 'axios';\nfunction FileUpload({\n  onUploadSuccess\n}) {\n  const [file, setFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [message, setMessage] = useState('');\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n    setMessage('');\n  };\n  const handleUpload = async () => {\n    if (!file) return;\n\n    // Validate file type and size\n    const allowedTypes = ['application/pdf', 'text/plain', 'text/csv'];\n    const maxSize = 10 * 1024 * 1024; // 10MB\n\n    if (!allowedTypes.includes(file.type)) {\n      setMessage('Error: Only PDF, TXT, and CSV files are allowed');\n      return;\n    }\n    if (file.size > maxSize) {\n      setMessage(`Error: File size exceeds ${maxSize / 1024 / 1024}MB limit`);\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    setUploading(true);\n    setMessage('');\n    try {\n      const response = await axios.post('http://localhost:8000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setMessage(response.data.message || 'File uploaded successfully!');\n      if (onUploadSuccess) {\n        onUploadSuccess();\n      }\n\n      // Clear message after 5 seconds\n      setTimeout(() => setMessage(''), 5000);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || 'Failed to upload file';\n      setMessage(`Error: ${errorMessage}`);\n\n      // Clear error message after 5 seconds\n      setTimeout(() => setMessage(''), 5000);\n    } finally {\n      setUploading(false);\n      setFile(null);\n    }\n  };\n  return /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    align: \"center\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"Upload Document\"), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      display: 'flex',\n      gap: 2,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    accept: \".pdf,.docx,.doc,.txt\",\n    style: {\n      display: 'none'\n    },\n    id: \"raised-button-file\",\n    type: \"file\",\n    onChange: handleFileChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"raised-button-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    component: \"span\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"Choose File\")), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    onClick: handleUpload,\n    disabled: !file || uploading,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"Upload\")), file && /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    align: \"center\",\n    sx: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, file.name), uploading && /*#__PURE__*/React.createElement(LinearProgress, {\n    sx: {\n      mt: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }), message && /*#__PURE__*/React.createElement(Typography, {\n    variant: \"caption\",\n    color: message.includes('Error') ? 'error' : 'success',\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, message));\n}\nexport default FileUpload;","map":{"version":3,"names":["React","useState","Button","Typography","Box","LinearProgress","axios","FileUpload","onUploadSuccess","file","setFile","uploading","setUploading","message","setMessage","handleFileChange","e","target","files","handleUpload","allowedTypes","maxSize","includes","type","size","formData","FormData","append","response","post","headers","data","setTimeout","error","_error$response","_error$response$data","errorMessage","createElement","sx","display","flexDirection","gap","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","variant","align","gutterBottom","alignItems","justifyContent","accept","style","id","onChange","htmlFor","component","onClick","disabled","overflow","textOverflow","whiteSpace","name","mt","color"],"sources":["C:/Users/SreeramYashasvi/Cursor Files/rag-pinecone/frontend/src/components/fileupload.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Typography, Box, LinearProgress } from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nfunction FileUpload({ onUploadSuccess }) {\r\n  const [file, setFile] = useState(null);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n    setMessage('');\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) return;\r\n\r\n    // Validate file type and size\r\n    const allowedTypes = ['application/pdf', 'text/plain', 'text/csv'];\r\n    const maxSize = 10 * 1024 * 1024; // 10MB\r\n    \r\n    if (!allowedTypes.includes(file.type)) {\r\n      setMessage('Error: Only PDF, TXT, and CSV files are allowed');\r\n      return;\r\n    }\r\n\r\n    if (file.size > maxSize) {\r\n      setMessage(`Error: File size exceeds ${maxSize / 1024 / 1024}MB limit`);\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    setUploading(true);\r\n    setMessage('');\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:8000/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      \r\n      setMessage(response.data.message || 'File uploaded successfully!');\r\n      \r\n      if (onUploadSuccess) {\r\n        onUploadSuccess();\r\n      }\r\n\r\n      // Clear message after 5 seconds\r\n      setTimeout(() => setMessage(''), 5000);\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || \r\n                         error.message || \r\n                         'Failed to upload file';\r\n      setMessage(`Error: ${errorMessage}`);\r\n      \r\n      // Clear error message after 5 seconds\r\n      setTimeout(() => setMessage(''), 5000);\r\n    } finally {\r\n      setUploading(false);\r\n      setFile(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\r\n      <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n        Upload Document\r\n      </Typography>\r\n      \r\n      <Box sx={{ display: 'flex', gap: 2, alignItems: 'center', justifyContent: 'center' }}>\r\n        <input\r\n          accept=\".pdf,.docx,.doc,.txt\"\r\n          style={{ display: 'none' }}\r\n          id=\"raised-button-file\"\r\n          type=\"file\"\r\n          onChange={handleFileChange}\r\n        />\r\n        <label htmlFor=\"raised-button-file\">\r\n          <Button variant=\"outlined\" component=\"span\" size=\"small\">\r\n            Choose File\r\n          </Button>\r\n        </label>\r\n        \r\n        <Button\r\n          variant=\"outlined\"\r\n          onClick={handleUpload}\r\n          disabled={!file || uploading}\r\n          size=\"small\"\r\n        >\r\n          Upload\r\n        </Button>\r\n      </Box>\r\n\r\n      {file && (\r\n        <Typography variant=\"caption\" align=\"center\" sx={{ \r\n          overflow: 'hidden', \r\n          textOverflow: 'ellipsis', \r\n          whiteSpace: 'nowrap' \r\n        }}>\r\n          {file.name}\r\n        </Typography>\r\n      )}\r\n      \r\n      {uploading && <LinearProgress sx={{ mt: 1 }} />}\r\n      \r\n      {message && (\r\n        <Typography \r\n          variant=\"caption\" \r\n          color={message.includes('Error') ? 'error' : 'success'}\r\n          align=\"center\"\r\n        >\r\n          {message}\r\n        </Typography>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default FileUpload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}