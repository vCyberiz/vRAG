{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SreeramYashasvi\\\\Cursor Files\\\\rag-pinecone\\\\frontend\\\\src\\\\components\\\\documentmanager.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Paper, Typography, Box, Checkbox, FormControlLabel, Button } from '@mui/material';\nimport axios from 'axios';\nfunction DocumentManager({\n  onSelectionChange,\n  refreshTrigger\n}) {\n  const [documents, setDocuments] = useState([]);\n  const [selectedDocs, setSelectedDocs] = useState([]);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    fetchDocuments();\n  }, [refreshTrigger]);\n  const fetchDocuments = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/documents');\n      if (response.data.data.status === 'processing') {\n        // If documents are still processing, show loading state\n        setError('Processing documents...');\n        // Retry after 2 seconds\n        setTimeout(fetchDocuments, 2000);\n      } else {\n        setDocuments(response.data.data.documents);\n        setError('');\n      }\n    } catch (error) {\n      setError('Failed to fetch documents');\n    }\n  };\n  const handleSelectionChange = document => {\n    const newSelection = selectedDocs.includes(document) ? selectedDocs.filter(doc => doc !== document) : [...selectedDocs, document];\n    setSelectedDocs(newSelection);\n    onSelectionChange(newSelection);\n  };\n  return /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    sx: {\n      p: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Available Documents\"), error && /*#__PURE__*/React.createElement(Typography, {\n    color: \"error\",\n    sx: {\n      mb: 2\n    },\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, error), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      flex: 1,\n      overflow: 'auto',\n      display: 'flex',\n      flexDirection: 'column',\n      gap: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, documents.map(doc => /*#__PURE__*/React.createElement(FormControlLabel, {\n    key: doc,\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: selectedDocs.includes(doc),\n      onChange: () => handleSelectionChange(doc),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }),\n    label: doc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  })), documents.length === 0 && /*#__PURE__*/React.createElement(Typography, {\n    color: \"text.secondary\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"No documents uploaded yet\")));\n}\nexport default DocumentManager;","map":{"version":3,"names":["React","useState","useEffect","Paper","Typography","Box","Checkbox","FormControlLabel","Button","axios","DocumentManager","onSelectionChange","refreshTrigger","documents","setDocuments","selectedDocs","setSelectedDocs","error","setError","fetchDocuments","response","get","data","status","setTimeout","handleSelectionChange","document","newSelection","includes","filter","doc","createElement","elevation","sx","p","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","align","color","mb","flex","overflow","display","flexDirection","gap","map","key","control","checked","onChange","label","length"],"sources":["C:/Users/SreeramYashasvi/Cursor Files/rag-pinecone/frontend/src/components/documentmanager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Paper, Typography, Box, Checkbox, FormControlLabel, Button } from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nfunction DocumentManager({ onSelectionChange, refreshTrigger }) {\r\n  const [documents, setDocuments] = useState([]);\r\n  const [selectedDocs, setSelectedDocs] = useState([]);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchDocuments();\r\n  }, [refreshTrigger]);\r\n\r\n  const fetchDocuments = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:8000/documents');\r\n      if (response.data.data.status === 'processing') {\r\n        // If documents are still processing, show loading state\r\n        setError('Processing documents...');\r\n        // Retry after 2 seconds\r\n        setTimeout(fetchDocuments, 2000);\r\n      } else {\r\n        setDocuments(response.data.data.documents);\r\n        setError('');\r\n      }\r\n    } catch (error) {\r\n      setError('Failed to fetch documents');\r\n    }\r\n  };\r\n\r\n  const handleSelectionChange = (document) => {\r\n    const newSelection = selectedDocs.includes(document)\r\n      ? selectedDocs.filter(doc => doc !== document)\r\n      : [...selectedDocs, document];\r\n    \r\n    setSelectedDocs(newSelection);\r\n    onSelectionChange(newSelection);\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={3} sx={{ p: 3 }}>\r\n      <Typography variant=\"h6\" gutterBottom align=\"center\">\r\n        Available Documents\r\n      </Typography>\r\n      {error && (\r\n        <Typography color=\"error\" sx={{ mb: 2 }} align=\"center\">\r\n          {error}\r\n        </Typography>\r\n      )}\r\n      <Box sx={{ \r\n        flex: 1, \r\n        overflow: 'auto',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        gap: 1\r\n      }}>\r\n        {documents.map((doc) => (\r\n          <FormControlLabel\r\n            key={doc}\r\n            control={\r\n              <Checkbox\r\n                checked={selectedDocs.includes(doc)}\r\n                onChange={() => handleSelectionChange(doc)}\r\n              />\r\n            }\r\n            label={doc}\r\n          />\r\n        ))}\r\n        {documents.length === 0 && (\r\n          <Typography color=\"text.secondary\" align=\"center\">\r\n            No documents uploaded yet\r\n          </Typography>\r\n        )}\r\n      </Box>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default DocumentManager;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}