{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SreeramYashasvi\\\\Cursor Files\\\\rag-system-basic\\\\frontend\\\\src\\\\components\\\\documentmanager.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Paper, Typography, Box, Checkbox, FormControlLabel, CircularProgress } from '@mui/material';\nimport axios from 'axios';\nfunction DocumentManager({\n  onSelectionChange,\n  refreshTrigger\n}) {\n  const [documents, setDocuments] = useState([]);\n  const [selectedDocs, setSelectedDocs] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    fetchDocuments();\n  }, [refreshTrigger]);\n  const fetchDocuments = async () => {\n    try {\n      setLoading(true);\n      setError('');\n      const response = await axios.get('http://localhost:8000/documents');\n      if (response.data && Array.isArray(response.data.documents)) {\n        setDocuments(response.data.documents);\n        // Clear selected docs if they're no longer available\n        setSelectedDocs(prev => prev.filter(doc => response.data.documents.includes(doc)));\n      } else {\n        setError('Invalid response format from server');\n        setDocuments([]);\n      }\n    } catch (error) {\n      console.error('Error fetching documents:', error);\n      setError('Failed to fetch documents');\n      setDocuments([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSelectionChange = document => {\n    const newSelection = selectedDocs.includes(document) ? selectedDocs.filter(doc => doc !== document) : [...selectedDocs, document];\n    setSelectedDocs(newSelection);\n    onSelectionChange(newSelection);\n  };\n  return /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Available Documents\"), loading && /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      display: 'flex',\n      justifyContent: 'center',\n      my: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  })), error && /*#__PURE__*/React.createElement(Typography, {\n    color: \"error\",\n    sx: {\n      mb: 2\n    },\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, error), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      flex: 1,\n      overflowY: 'auto',\n      display: 'flex',\n      flexDirection: 'column',\n      gap: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, documents.length > 0 ? documents.map(doc => /*#__PURE__*/React.createElement(FormControlLabel, {\n    key: doc,\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: selectedDocs.includes(doc),\n      onChange: () => handleSelectionChange(doc),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }),\n    label: doc,\n    sx: {\n      '& .MuiFormControlLabel-label': {\n        width: '100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  })) : !loading && /*#__PURE__*/React.createElement(Typography, {\n    color: \"text.secondary\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, \"No documents uploaded yet\")));\n}\nexport default DocumentManager;","map":{"version":3,"names":["React","useState","useEffect","Paper","Typography","Box","Checkbox","FormControlLabel","CircularProgress","axios","DocumentManager","onSelectionChange","refreshTrigger","documents","setDocuments","selectedDocs","setSelectedDocs","error","setError","loading","setLoading","fetchDocuments","response","get","data","Array","isArray","prev","filter","doc","includes","console","handleSelectionChange","document","newSelection","createElement","sx","display","flexDirection","height","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","variant","gutterBottom","align","justifyContent","my","size","color","mb","flex","overflowY","gap","length","map","key","control","checked","onChange","label","width","overflow","textOverflow","whiteSpace"],"sources":["C:/Users/SreeramYashasvi/Cursor Files/rag-system-basic/frontend/src/components/documentmanager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Paper, Typography, Box, Checkbox, FormControlLabel, CircularProgress } from '@mui/material';\r\nimport axios from 'axios';\r\n\r\nfunction DocumentManager({ onSelectionChange, refreshTrigger }) {\r\n  const [documents, setDocuments] = useState([]);\r\n  const [selectedDocs, setSelectedDocs] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchDocuments();\r\n  }, [refreshTrigger]);\r\n\r\n  const fetchDocuments = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError('');\r\n      const response = await axios.get('http://localhost:8000/documents');\r\n      if (response.data && Array.isArray(response.data.documents)) {\r\n        setDocuments(response.data.documents);\r\n        // Clear selected docs if they're no longer available\r\n        setSelectedDocs(prev => prev.filter(doc => response.data.documents.includes(doc)));\r\n      } else {\r\n        setError('Invalid response format from server');\r\n        setDocuments([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching documents:', error);\r\n      setError('Failed to fetch documents');\r\n      setDocuments([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSelectionChange = (document) => {\r\n    const newSelection = selectedDocs.includes(document)\r\n      ? selectedDocs.filter(doc => doc !== document)\r\n      : [...selectedDocs, document];\r\n    \r\n    setSelectedDocs(newSelection);\r\n    onSelectionChange(newSelection);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', flexDirection: 'column', height: '100%' }}>\r\n      <Typography variant=\"h6\" gutterBottom align=\"center\">\r\n        Available Documents\r\n      </Typography>\r\n      \r\n      {loading && (\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', my: 2 }}>\r\n          <CircularProgress size={24} />\r\n        </Box>\r\n      )}\r\n      \r\n      {error && (\r\n        <Typography color=\"error\" sx={{ mb: 2 }} align=\"center\">\r\n          {error}\r\n        </Typography>\r\n      )}\r\n\r\n      <Box sx={{ \r\n        flex: 1, \r\n        overflowY: 'auto',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        gap: 1\r\n      }}>\r\n        {documents.length > 0 ? (\r\n          documents.map((doc) => (\r\n            <FormControlLabel\r\n              key={doc}\r\n              control={\r\n                <Checkbox\r\n                  checked={selectedDocs.includes(doc)}\r\n                  onChange={() => handleSelectionChange(doc)}\r\n                />\r\n              }\r\n              label={doc}\r\n              sx={{\r\n                '& .MuiFormControlLabel-label': {\r\n                  width: '100%',\r\n                  overflow: 'hidden',\r\n                  textOverflow: 'ellipsis',\r\n                  whiteSpace: 'nowrap'\r\n                }\r\n              }}\r\n            />\r\n          ))\r\n        ) : !loading && (\r\n          <Typography color=\"text.secondary\" align=\"center\">\r\n            No documents uploaded yet\r\n          </Typography>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default DocumentManager;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}