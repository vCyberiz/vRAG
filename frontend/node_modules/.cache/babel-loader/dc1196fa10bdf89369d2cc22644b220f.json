{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SreeramYashasvi\\\\Cursor Files\\\\rag-pinecone\\\\frontend\\\\src\\\\components\\\\documentmanager.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { List, ListItem, ListItemText, Checkbox, FormControlLabel, Typography, Box, CircularProgress } from '@mui/material';\nfunction DocumentManager({\n  onSelectionChange,\n  refreshTrigger\n}) {\n  const [documents, setDocuments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedDocs, setSelectedDocs] = useState([]);\n  useEffect(() => {\n    const fetchDocuments = async () => {\n      try {\n        var _response$data, _response$data$data;\n        setLoading(true);\n        const response = await axios.get('http://localhost:8000/documents');\n        console.log('Fetched documents:', response.data);\n\n        // Extract documents from nested response\n        const docList = ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$data = _response$data.data) === null || _response$data$data === void 0 ? void 0 : _response$data$data.documents) || [];\n        setDocuments(docList);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching documents:', err);\n        setError('Failed to fetch documents');\n        setLoading(false);\n      }\n    };\n    fetchDocuments();\n  }, [refreshTrigger]);\n  const handleDocumentToggle = docName => {\n    const currentIndex = selectedDocs.indexOf(docName);\n    const newSelectedDocs = [...selectedDocs];\n    if (currentIndex === -1) {\n      newSelectedDocs.push(docName);\n    } else {\n      newSelectedDocs.splice(currentIndex, 1);\n    }\n    setSelectedDocs(newSelectedDocs);\n    onSelectionChange(newSelectedDocs);\n  };\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }));\n  }\n  if (error) {\n    return /*#__PURE__*/React.createElement(Typography, {\n      color: \"error\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, error);\n  }\n  return /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      overflowY: 'auto',\n      maxHeight: '100%',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    align: \"center\",\n    sx: {\n      mb: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"Available Documents\"), documents.length === 0 ? /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"No documents available\") : /*#__PURE__*/React.createElement(List, {\n    dense: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, documents.map(doc => /*#__PURE__*/React.createElement(ListItem, {\n    key: doc,\n    disablePadding: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: selectedDocs.indexOf(doc) !== -1,\n      onChange: () => handleDocumentToggle(doc),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }\n    }),\n    label: doc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  })))));\n}\nexport default DocumentManager;","map":{"version":3,"names":["React","useState","useEffect","axios","List","ListItem","ListItemText","Checkbox","FormControlLabel","Typography","Box","CircularProgress","DocumentManager","onSelectionChange","refreshTrigger","documents","setDocuments","loading","setLoading","error","setError","selectedDocs","setSelectedDocs","fetchDocuments","_response$data","_response$data$data","response","get","console","log","data","docList","err","handleDocumentToggle","docName","currentIndex","indexOf","newSelectedDocs","push","splice","createElement","display","justifyContent","alignItems","height","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","color","align","sx","overflowY","maxHeight","flexDirection","variant","mb","length","dense","map","doc","key","disablePadding","control","checked","onChange","label"],"sources":["C:/Users/SreeramYashasvi/Cursor Files/rag-pinecone/frontend/src/components/documentmanager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { \r\n  List, \r\n  ListItem, \r\n  ListItemText, \r\n  Checkbox, \r\n  FormControlLabel, \r\n  Typography, \r\n  Box, \r\n  CircularProgress \r\n} from '@mui/material';\r\n\r\nfunction DocumentManager({ onSelectionChange, refreshTrigger }) {\r\n  const [documents, setDocuments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [selectedDocs, setSelectedDocs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchDocuments = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await axios.get('http://localhost:8000/documents');\r\n        console.log('Fetched documents:', response.data);\r\n        \r\n        // Extract documents from nested response\r\n        const docList = response.data?.data?.documents || [];\r\n        \r\n        setDocuments(docList);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Error fetching documents:', err);\r\n        setError('Failed to fetch documents');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDocuments();\r\n  }, [refreshTrigger]);\r\n\r\n  const handleDocumentToggle = (docName) => {\r\n    const currentIndex = selectedDocs.indexOf(docName);\r\n    const newSelectedDocs = [...selectedDocs];\r\n\r\n    if (currentIndex === -1) {\r\n      newSelectedDocs.push(docName);\r\n    } else {\r\n      newSelectedDocs.splice(currentIndex, 1);\r\n    }\r\n\r\n    setSelectedDocs(newSelectedDocs);\r\n    onSelectionChange(newSelectedDocs);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100%\">\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Typography color=\"error\" align=\"center\">\r\n        {error}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ \r\n      overflowY: 'auto', \r\n      maxHeight: '100%',\r\n      display: 'flex',\r\n      flexDirection: 'column'\r\n    }}>\r\n      <Typography variant=\"h6\" align=\"center\" sx={{ mb: 2 }}>\r\n        Available Documents\r\n      </Typography>\r\n      \r\n      {documents.length === 0 ? (\r\n        <Typography align=\"center\" color=\"textSecondary\">\r\n          No documents available\r\n        </Typography>\r\n      ) : (\r\n        <List dense>\r\n          {documents.map((doc) => (\r\n            <ListItem key={doc} disablePadding>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={selectedDocs.indexOf(doc) !== -1}\r\n                    onChange={() => handleDocumentToggle(doc)}\r\n                  />\r\n                }\r\n                label={doc}\r\n              />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default DocumentManager;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}