{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SreeramYashasvi\\\\Cursor Files\\\\rag-system-basic\\\\frontend\\\\src\\\\components\\\\queryinterface.js\";\nimport React, { useState, useRef } from 'react';\nimport { TextField, Button, Paper, Typography, Box } from '@mui/material';\nimport axios from 'axios';\nimport QueryResults from './queryresults';\nfunction QueryInterface({\n  selectedDocuments\n}) {\n  const [query, setQuery] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const abortControllerRef = useRef(null);\n  const handleStop = () => {\n    if (abortControllerRef.current) {\n      abortControllerRef.current.abort();\n      abortControllerRef.current = null;\n      setLoading(false);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!query.trim()) return;\n    setLoading(true);\n    setError('');\n\n    // Create new AbortController for this request\n    abortControllerRef.current = new AbortController();\n\n    // Add the question to messages immediately\n    const newQuestion = {\n      type: 'question',\n      question: query\n    };\n    setMessages(prev => [...prev, newQuestion]);\n    try {\n      const response = await axios.post('http://localhost:8000/query', {\n        question: query,\n        documents: selectedDocuments,\n        use_rag: selectedDocuments.length > 0\n      }, {\n        signal: abortControllerRef.current.signal\n      });\n\n      // Add the answer to messages\n      const newAnswer = {\n        type: 'answer',\n        answer: typeof response.data === 'string' ? response.data : response.data.answer,\n        sources: response.data.sources || []\n      };\n      setMessages(prev => [...prev, newAnswer]);\n      setQuery(''); // Clear input after successful query\n    } catch (error) {\n      if (axios.isCancel(error)) {\n        setError('Response generation stopped');\n      } else {\n        var _error$response, _error$response$data;\n        setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to get response');\n        // Remove the question if there was an error\n        setMessages(prev => prev.slice(0, -1));\n      }\n    }\n    setLoading(false);\n    abortControllerRef.current = null;\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSubmit(e);\n    }\n  };\n  const getPlaceholderText = () => {\n    return selectedDocuments.length > 0 ? \"Ask a question about your documents...\" : \"Ask me anything...\";\n  };\n  return /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100%',\n      width: '100%',\n      position: 'relative'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      flex: 1,\n      overflowY: 'auto',\n      mb: 2,\n      px: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(QueryResults, {\n    messages: messages,\n    isLoading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    sx: {\n      p: 3,\n      borderRadius: '16px',\n      backgroundColor: 'background.paper'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    value: query,\n    onChange: e => setQuery(e.target.value),\n    onKeyPress: handleKeyPress,\n    placeholder: getPlaceholderText(),\n    multiline: true,\n    rows: 2,\n    sx: {\n      mb: 2,\n      '& .MuiOutlinedInput-root': {\n        borderRadius: '12px'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    sx: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      gap: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"error\",\n    onClick: handleStop,\n    sx: {\n      minWidth: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, \"Stop\") : /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    type: \"submit\",\n    disabled: !query.trim(),\n    sx: {\n      minWidth: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, \"Ask\"), error && /*#__PURE__*/React.createElement(Typography, {\n    color: \"error\",\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, error)))));\n}\nexport default QueryInterface;","map":{"version":3,"names":["React","useState","useRef","TextField","Button","Paper","Typography","Box","axios","QueryResults","QueryInterface","selectedDocuments","query","setQuery","messages","setMessages","loading","setLoading","error","setError","abortControllerRef","handleStop","current","abort","handleSubmit","e","preventDefault","trim","AbortController","newQuestion","type","question","prev","response","post","documents","use_rag","length","signal","newAnswer","answer","data","sources","isCancel","_error$response","_error$response$data","message","slice","handleKeyPress","key","shiftKey","getPlaceholderText","createElement","sx","display","flexDirection","height","width","position","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","flex","overflowY","mb","px","isLoading","elevation","p","borderRadius","backgroundColor","onSubmit","fullWidth","value","onChange","target","onKeyPress","placeholder","multiline","rows","justifyContent","alignItems","gap","variant","color","onClick","minWidth","disabled"],"sources":["C:/Users/SreeramYashasvi/Cursor Files/rag-system-basic/frontend/src/components/queryinterface.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { TextField, Button, Paper, Typography, Box } from '@mui/material';\r\nimport axios from 'axios';\r\nimport QueryResults from './queryresults';\r\n\r\nfunction QueryInterface({ selectedDocuments }) {\r\n  const [query, setQuery] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const abortControllerRef = useRef(null);\r\n\r\n  const handleStop = () => {\r\n    if (abortControllerRef.current) {\r\n      abortControllerRef.current.abort();\r\n      abortControllerRef.current = null;\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!query.trim()) return;\r\n\r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    // Create new AbortController for this request\r\n    abortControllerRef.current = new AbortController();\r\n    \r\n    // Add the question to messages immediately\r\n    const newQuestion = { type: 'question', question: query };\r\n    setMessages(prev => [...prev, newQuestion]);\r\n    \r\n    try {\r\n      const response = await axios.post('http://localhost:8000/query', {\r\n        question: query,\r\n        documents: selectedDocuments,\r\n        use_rag: selectedDocuments.length > 0\r\n      }, {\r\n        signal: abortControllerRef.current.signal\r\n      });\r\n      \r\n      // Add the answer to messages\r\n      const newAnswer = { \r\n        type: 'answer', \r\n        answer: typeof response.data === 'string' ? response.data : response.data.answer,\r\n        sources: response.data.sources || []\r\n      };\r\n      setMessages(prev => [...prev, newAnswer]);\r\n      setQuery(''); // Clear input after successful query\r\n    } catch (error) {\r\n      if (axios.isCancel(error)) {\r\n        setError('Response generation stopped');\r\n      } else {\r\n        setError(error.response?.data?.message || 'Failed to get response');\r\n        // Remove the question if there was an error\r\n        setMessages(prev => prev.slice(0, -1));\r\n      }\r\n    }\r\n    \r\n    setLoading(false);\r\n    abortControllerRef.current = null;\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSubmit(e);\r\n    }\r\n  };\r\n\r\n  const getPlaceholderText = () => {\r\n    return selectedDocuments.length > 0\r\n      ? \"Ask a question about your documents...\"\r\n      : \"Ask me anything...\";\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ \r\n      display: 'flex', \r\n      flexDirection: 'column', \r\n      height: '100%', \r\n      width: '100%',\r\n      position: 'relative'\r\n    }}>\r\n      {/* Chat Window */}\r\n      <Box sx={{ \r\n        flex: 1, \r\n        overflowY: 'auto', \r\n        mb: 2,\r\n        px: 2\r\n      }}>\r\n        <QueryResults messages={messages} isLoading={loading} />\r\n      </Box>\r\n\r\n      {/* Input Area */}\r\n      <Paper \r\n        elevation={3} \r\n        sx={{ \r\n          p: 3,\r\n          borderRadius: '16px',\r\n          backgroundColor: 'background.paper',\r\n        }}\r\n      >\r\n        <form onSubmit={handleSubmit}>\r\n          <TextField\r\n            fullWidth\r\n            value={query}\r\n            onChange={(e) => setQuery(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n            placeholder={getPlaceholderText()}\r\n            multiline\r\n            rows={2}\r\n            sx={{ \r\n              mb: 2,\r\n              '& .MuiOutlinedInput-root': {\r\n                borderRadius: '12px',\r\n              }\r\n            }}\r\n          />\r\n          <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', gap: 2 }}>\r\n            {loading ? (\r\n              <Button \r\n                variant=\"outlined\" \r\n                color=\"error\"\r\n                onClick={handleStop}\r\n                sx={{ minWidth: 100 }}\r\n              >\r\n                Stop\r\n              </Button>\r\n            ) : (\r\n              <Button \r\n                variant=\"outlined\" \r\n                type=\"submit\"\r\n                disabled={!query.trim()}\r\n                sx={{ minWidth: 100 }}\r\n              >\r\n                Ask\r\n              </Button>\r\n            )}\r\n            {error && (\r\n              <Typography color=\"error\" variant=\"body2\">\r\n                {error}\r\n              </Typography>\r\n            )}\r\n          </Box>\r\n        </form>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default QueryInterface;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}